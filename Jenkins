pipeline {
  agent none
  stages {
    stage('CLONE GIT REPOSITORY') {
      agent { label 'Ubuntu-Appserver-Rebuilt' }
      steps {
        checkout([
          $class: 'GitSCM',
          branches: [[name: '*/main']], // Adjust the branch name if necessary
          userRemoteConfigs: [[url: 'https://github.com/akawilk/nake-Game-master.git']]
        ])
      }
    }
 
    stage('SCA-SAST-SNYK-TEST') {
      agent { label 'Ubuntu-Appserver-Rebuilt' }
      steps {
        echo "SNYK-TEST"
      }
    }
 
    stage('BUILD-AND-TAG') {
      agent { label 'Ubuntu-Appserver-Rebuilt' }
      steps {
        script {
          def app = docker.build("akawilk/snake")
          app.tag("latest")
        }
      }
    }
 
    stage('POST-TO-DOCKERHUB') {
      agent { label 'Ubuntu-Appserver-Rebuilt' }
      steps {
        script {
          docker.withRegistry("https://registry.hub.docker.com", "dockerhub_credentials") {
            def app = docker.image("akawilk/snake")
            app.push("latest")
          }
        }
      }
    }
 
    stage('DEPLOYMENT') {
      agent { label 'Ubuntu-Appserver-Rebuilt' }
      steps {
        script {
          try {
            sh "docker-compose down"
          } catch (Exception e) {
            echo "Error in stopping containers, proceeding to start fresh containers."
          }
          sh "docker-compose up -d"
        }
      }
    }
  }
}
